
// to generate SQL -> cmd + shift + p -> DBML to SQL
// https://dbml.dbdiagram.io/docs

Table users [headercolor: #3498DB] {
  user_id integer [pk, increment, note: 'This PK should be ALWAYS'] 
  username varchar [not null, unique]
  email varchar [not null, unique]
  password varchar [not null]
  name varchar [not null]
  role varchar [not null]
  gender varchar(10) [not null]
  avatar varchar

  created_at timestamp [default: 'now()']

  indexes {
    username [unique]
  }
  Note: 'Users Table'
}

Table posts {
  post_id integer [pk, increment]
  title varchar(200) [default: '']
  body text [default: '']
  og_image varchar
  slug varchar [not null, unique]
  published boolean [note: '''
    💸 true,
    ❌ false,
  ''']

  created_by integer
  created_at timestamp [default: 'now()']
}

Table claps {
  clap_id integer [pk, increment]
  post_id integer
  user_id integer
  counter integer [default: 0]

  created_at timestamp

  indexes {
    post_id user_id [unique, name: 'user_post_claps_index']
    post_id [name: 'post_claps_index']
  }
}


Table comments {
  comment_id integer [pk, increment]
  post_id integer
  user_id increment
  content text
  created_at timestamp
  visible boolean

  comment_parent_id integer

  indexes {
    post_id [name: 'post_comments_index']
    visible [name: 'post_visibility_index']
  }
}


Table user_lists {
  user_list_id integer [pk, increment]
  user_id integer
  title varchar(100)

  indexes {
    user_id title [unique, name: 'userlists_user_title_index']
    user_id [name: 'userlists_user_index']
  }
}

Table user_list_entry {
  user_list_entry integer [pk, increment]
  user_list_id integer
  post_id integer
}


Ref: "users"."user_id" < "posts"."created_by"

Ref: "posts"."post_id" < "claps"."post_id"

Ref: "users"."user_id" < "claps"."user_id"

Ref: "posts"."post_id" < "comments"."comment_id"

Ref: "users"."user_id" < "comments"."user_id"

Ref: "comments"."comment_id" < "comments"."comment_parent_id"

Ref: "users"."user_id" < "user_lists"."user_id"

Ref: "user_lists"."user_list_id" < "user_list_entry"."user_list_id"

Ref: "posts"."post_id" < "user_list_entry"."post_id"
